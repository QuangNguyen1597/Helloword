package soap.ads.basic;

import java.sql.*;
import soap.ConnectionPool;
import soap.ConnectionImpl;

public class BasicImpl implements Basic{

    private ConnectionPool cp;

    protected Connection con;

    private String objectName;

    public BasicImpl(Connection con, String objectName) {
        this.objectName= objectName;
        if(cp==null){
            this.cp = new ConnectionImpl();
        }
        else{
            this.cp = cp;
        }
        //Xin kết nối để làm việc
        try {
            this.con = this.cp.getConnection(this.objectName);
            if(this.con.getAutoCommit()){
                this.con.setAutoCommit(false);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

    }
    public boolean add(PreparedStatement pre) {
        return false;
    }

    public boolean edit(PreparedStatement pre) {
        return false;
    }

    public boolean del(PreparedStatement pre) {
        return false;
    }


    public ResultSet get(String sql, int value) {
        try {
           PreparedStatement pre = this.con.prepareStatement(sql);
           if(value > 0){
               pre.setInt(1,value);
           }
           return pre.executeQuery();
       } catch (SQLException ex) {
           ex.printStackTrace();
           //Trở về trang thái an toàn
           try {
               this.con.rollback();
           } catch (SQLException ex1) {
               ex1.printStackTrace();
           }
       }
       return null;

    }

    public ResultSet get(String sql, String name, String pass) {
        try {
            PreparedStatement pre = this.con.prepareStatement(sql);

            //truyen gia tri
            pre.setString(1, name);
            pre.setString(2, pass);

            return pre.executeQuery();

        } catch (SQLException ex) {
            ex.printStackTrace();

            try {
                this.con.rollback();
            } catch (SQLException ex1) {
                ex1.printStackTrace();
            }
        }

        return null;

    }

    public ResultSet gets(String sql) {
        return this.get(sql,0);
    }

    public ResultSet[] gets(String[] sqls) {
        ResultSet[] tmp = new ResultSet[sqls.length];
        for(int i=0; i< sqls.length; i++){
            tmp[i] = this.get(sqls[i],0);
        }
        return tmp;

    }

    public ConnectionPool getCP() {
        return this.cp;
    }

    public void releaseConnection() {
        try {
            this.cp.releaseConnection(this.con, this.objectName);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

    }

    public static void main(String[] args) {

    }

}
